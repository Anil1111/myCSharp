A C# class is a section of code that performs specific tasks, a blueprint for creating 
other objects.

We breakdown our app into classes and then compile them together.

The program.cs class is the entry point for our app, through the Main() method.

Each class gets its own file.

Now we have a class that does something, we can invoke that class in program.cs

within program.cs, we invoke a new instance of the GradeBook class

GradeBook book = new GradeBook();. This is a constructor that will help us define parameters for the 
new gradeBook.

Encapsulation allows us to work with objects without understanding every aspect of how its used.

public, private, static -- Access Modifiers

Apply static to a method or field when: Statics can be used without creating a class

e.g. public static float MinimumGrade = 0;

void - used to specify the method returns nothing.

